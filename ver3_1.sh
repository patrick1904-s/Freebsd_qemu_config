#!/bin/bash

set -euo pipefail

# üß† Function: Print error and exit
die() {
    echo "‚ùå $1" >&2
    exit 1
}

# üß† Usage help
usage() {
    echo "Usage: $0 <FreeBSD-XX.X-RELEASE-arch-*.iso>"
    exit 1
}

# üì• Input validation
if [[ $# -ne 1 ]]; then
    usage
fi

ISO_FILE="$1"

if [[ ! -f "$ISO_FILE" ]]; then
    die "File not found: $ISO_FILE"
fi

# üß† Extract version and arch using regex
if [[ "$ISO_FILE" =~ FreeBSD-([0-9]+\.[0-9]+)-RELEASE-([^-]+)-.*\.iso ]]; then
    VERSION="${BASH_REMATCH[1]}"
    ARCH="${BASH_REMATCH[2]}"
else
    die "Filename format incorrect. Could not extract version and architecture."
fi

BASE_URL="https://download.freebsd.org/releases/ISO-IMAGES/${VERSION}"
CHECKSUM_FILE="CHECKSUM.SHA512"
CHECKSUM_URL="${BASE_URL}/${CHECKSUM_FILE}"

echo "üì¶ FreeBSD Version: $VERSION"
echo "üñ•Ô∏è Architecture: $ARCH"
echo "üåê Downloading checksum from: $CHECKSUM_URL"

# üîΩ Download checksum file
if ! wget -q "$CHECKSUM_URL" -O "$CHECKSUM_FILE"; then
    die "Failed to download checksum file."
fi

# üìú Find all checksums matching this ISO file (in case of suffix differences)
echo "üîç Searching checksum file for: $ISO_FILE"
EXPECTED_CHECKSUM=""
FILENAME=$(basename "$ISO_FILE")

while IFS= read -r line; do
    # Expected format: SHA512 (filename) = checksum
    if [[ "$line" =~ ^SHA512\ \(([^)]+)\)\ =\ ([a-fA-F0-9]{128})$ ]]; then
        FILE_IN_CHECKSUM="${BASH_REMATCH[1]}"
        CHECKSUM_VALUE="${BASH_REMATCH[2]}"

        if [[ "$FILE_IN_CHECKSUM" == "$FILENAME" ]]; then
            EXPECTED_CHECKSUM="$CHECKSUM_VALUE"
            break
        fi
    fi
done < "$CHECKSUM_FILE"

if [[ -z "$EXPECTED_CHECKSUM" ]]; then
    die "Checksum entry for $FILENAME not found in $CHECKSUM_FILE"
fi

# üîê Calculate actual checksum
echo "üîß Calculating local SHA512 checksum..."
ACTUAL_CHECKSUM=$(sha512sum "$ISO_FILE" | awk '{print $1}')

# ‚úÖ Compare
echo "üîê Comparing checksums..."
if [[ "$EXPECTED_CHECKSUM" == "$ACTUAL_CHECKSUM" ]]; then
    echo "‚úÖ Checksum verified successfully!"
    exit 0
else
    echo "‚ùå Checksum mismatch!"
    echo "Expected: $EXPECTED_CHECKSUM"
    echo "Actual:   $ACTUAL_CHECKSUM"
    exit 1
fi

